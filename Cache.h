////////////////////////////////////////////////////////////////
# pragma once
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
# include "defs.h"
# include <unordered_map>
////////////////////////////////////////////////////////////////
using std::unordered_map;
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
# include <array>
////////////////////////////////////////////////////////////////
# include <mutex>
# include <shared_mutex>
////////////////////////////////////////////////////////////////
using std::array;
////////////////////////////////////////////////////////////////
class PerftCache {
    typedef u64            Key;
    typedef array <u64, 8> Value;
public:
    static u64  get( Key hash, int depth ){
        std::lock_guard<std::shared_mutex> lock(mutex_);
        return umap[ hash ][ depth ];
    }
    static void set( Key hash, int depth, u64 n ){
        std::lock_guard<std::shared_mutex> lock(mutex_);
        umap[ hash ][ depth ] = n;
    }
private:
    static unordered_map <Key, Value> umap;
    static std::shared_mutex mutex_;
};
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
// N6K/8/5N2/n7/8/6n1/8/k7 b - - 0 1
// > perft 7
// 8.34398 sec
// Perft: 80710893
